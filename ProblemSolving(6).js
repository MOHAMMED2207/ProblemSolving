// ๐ ูู ูููู ุงูุชูุฑูู ุงูุณุงุฏุณุ
// ุฃูุชุฑุญ:

// "ุฅุฒุงูุฉ ุงูุนูุงุตุฑ ุงูููุฑุฑุฉ ูู ูุตูููุฉ."
// ูุซูุงู: [1, 2, 2, 3, 4, 4, 5] โ [1, 2, 3, 4, 5]

const arr = [1, 2, 2, 3, 4, 4, 5];
const unique = [];
for (let i = 0; i < arr.length; i++) {
  if (!unique.includes(arr[i])) {
    unique.push(arr[i]);
  }
}
console.log(unique); // [1, 2, 3, 4, 5]

// ุดุฑุญ ุงูุฎุทูุฉ ุฎุทูุฉ:
// 1. new Set(arr)
// Set ูู ุฌุงูุงุณูุฑูุจุช ูู ููุน ุฎุงุต ูู ุงูุจูุงูุงุช.
// ููุฑุชู ุฅูู ุจูุฎุฒู ุงูููู ุจุฏูู ุชูุฑุงุฑ.
const removeDuplicates = (arr) => [...new Set(arr)];
console.log(removeDuplicates([1, 2, 2, 3, 4, 4, 5])); // [1, 2, 3, 4, 5]
// 2. [...new Set(arr)]
// ... ุฏู ุงุณูู Spread Operator.
// ููุฑุชู ุฅูู ุจููู ูู ุงูููู ุงููู ุฌูู ุงูู Set ููุฑุฌุนูู ูู ุดูู ูุตูููุฉ ุฌุฏูุฏุฉ.
